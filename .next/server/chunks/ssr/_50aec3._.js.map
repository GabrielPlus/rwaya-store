{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pius/rwaya-store/actions/get-billboard.tsx"],"sourcesContent":["import { Billboard } from \"@/types\";\n\nconst URL = `${process.env.NEXT_PUBLIC_API_URL}/billboards`;\n\nconst getBillboard = async (id: string): Promise<Billboard[]> => {\n    const res = await fetch(`${URL}/${id}`);\n\n    return res.json();\n};\n\nexport default getBillboard;"],"names":[],"mappings":";;;AAEA,MAAM,MAAM,sGAAmC,WAAW,CAAC;AAE3D,MAAM,eAAe,OAAO;IACxB,MAAM,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,EAAE,IAAI;IAEtC,OAAO,IAAI,IAAI;AACnB;uCAEe"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/pius/rwaya-store/components/billboard.tsx"],"sourcesContent":["import { Billboard as BillboardType } from \"@/types\";\n\ninterface BillboardProps {\n    data: BillboardType\n};\n\nconst Billboard: React.FC<BillboardProps> = ({\n    data\n}) => {\n    return (\n        <div className=\"p-4 sm:p-6 lg:p-8 rounded-xl overflow-hidden\">\n            <div \n            className=\"rounded-xl relative aspect-square md:aspect-[2.4/1] overflow-hidden bg-cover\"\n            style={{ backgroundImage: `url(${data?.imageUrl})` }}>\n                <div className=\"h-full w-full flex flex-col justify-center items-center text-center gap-y-8\">\n                        <div className=\"font-bold text-3xl sm:text-5xl lg:text-6xl sm:max-w-xl max-w-xs\">\n                            {data.label}\n                        </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Billboard;"],"names":[],"mappings":";;;;;AAMA,MAAM,YAAsC,CAAC,EACzC,IAAI,EACP;IACG,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YACD,WAAU;YACV,OAAO;gBAAE,iBAAiB,CAAC,IAAI,EAAE,MAAM,SAAS,CAAC,CAAC;YAAC;sBAC/C,cAAA,8OAAC;gBAAI,WAAU;0BACP,cAAA,8OAAC;oBAAI,WAAU;8BACV,KAAK,KAAK;;;;;;;;;;;;;;;;;;;;;AAMvC;uCAEe"}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/pius/rwaya-store/app/%28routes%29/page.tsx"],"sourcesContent":["import getBillboard from \"@/actions/get-billboard\";\nimport Billboard from \"@/components/billboard\";\nimport Container from \"@/components/ui/container\";\n\nexport const revalidate = 0;\n\nconst HomePage = async () => {\n  const billboard = await getBillboard(\"82905670-82ca-455a-b8ad-0c4d76ecf465\");\n\n  return ( \n    <Container>\n      <div className=\"space-y-10 pb-10\">\n        <Billboard data={billboard} />\n      </div>\n    </Container>\n   );\n}\n \nexport default HomePage;"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;AAEO,MAAM,aAAa;AAE1B,MAAM,WAAW;IACf,MAAM,YAAY,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAY,AAAD,EAAE;IAErC,qBACE,8OAAC,8HAAA,CAAA,UAAS;kBACR,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,wHAAA,CAAA,UAAS;gBAAC,MAAM;;;;;;;;;;;;;;;;AAIzB;uCAEe"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///home/pius/rwaya-store/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,mSAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,mSAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,mSAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}